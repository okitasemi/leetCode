# Given a binary tree, find its maximum depth.
# The maximum depth is the number of nodes along the longest path from the root node down to the farthest leaf node.
# Note: A leaf is a node with no children.

# Definition for a binary tree node.
# class TreeNode(object):
#     def __init__(self, x):
#         self.val = x
#         self.left = None
#         self.right = None

class Solution(object):
    def maxDepth(self, root):
        """
        :type root: TreeNode
        :rtype: int
        """
        
        height = 0
        if root:
            height = self.traverse(root, height)
        return height
            
    def traverse(self, node, height):
        heightL, heightR = 0, 0
        if node.left:
            heightL = self.traverse(node.left, height)
        if node.right:
            heightR = self.traverse(node.right, height)
        return max(heightL, heightR) + 1
        
