# Given a string containing just the characters '(', ')', '{', '}', '[' and ']', determine if the input string is valid.
# An input string is valid if:
# Open brackets must be closed by the same type of brackets.
# Open brackets must be closed in the correct order.
# Note that an empty string is also considered valid.

class Solution(object):
    def isValid(self, s):
        """
        :type s: str
        :rtype: bool
        """
        pMap = {')':'(', ']':'[', '}':'{'}
        pStack = []
        for p in s:
            if p not in pMap:
                pStack.append(p)
            else:
                if pStack and pMap[p] == pStack[-1]:
                    pStack.pop()
                else:
                    return False
        if pStack:
            return False
        return True

                
# Runtime: 12 ms, faster than 96.70% of Python online submissions for Valid Parentheses.
# Memory Usage: 11.8 MB, less than 55.46% of Python online submissions for Valid Parentheses.
