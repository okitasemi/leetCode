# You are climbing a stair case. It takes n steps to reach to the top.
# Each time you can either climb 1 or 2 steps. 
# In how many distinct ways can you climb to the top?
# Note: Given n will be a positive integer.

class Solution(object):
    def climbStairs(self, n):
        """
        :type n: int
        :rtype: int
        """
        if n <= 2:
            return n
        resultTwoStepsBefore = 1
        resultOneStepBefore = 2
        for i in range(3, n+1):
            numOfWays = resultOneStepBefore + resultTwoStepsBefore
            resultTwoStepsBefore = resultOneStepBefore
            resultOneStepBefore = numOfWays
        return resultOneStepBefore 
        
# Runtime: 24 ms, faster than 7.66% of Python online submissions for Climbing Stairs.
# Memory Usage: 11.7 MB, less than 43.75% of Python online submissions for Climbing Stairs.
